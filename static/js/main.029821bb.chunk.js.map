{"version":3,"sources":["components/Button.js","components/Navbar.js","images/Cinema.jpg","page/Landing.js","context/AppReducer.js","context/globalState.js","components/MovieList.js","images/navbar.png","components/Search.js","components/Nominees.js","page/NomineePage.js","App.js","reportWebVitals.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","to","className","Navbar","useState","button","Section","styled","section","image","Container","div","Landing","history","useHistory","push","state","action","nominationList","filter","o","imdbID","payload","length","find","alert","Title","initialState","window","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToNominationList","movie","removeMovieFromNominationList","MovieList","movies","useContext","addDefaultImage","ev","target","src","map","aMovie","checkMovie","checkExist","Poster","onError","alt","style","width","height","Year","disabled","Search","query","setQuery","setMovies","getMovieRequest","a","url","fetch","response","json","responseJson","console","log","placeholder","onChange","event","Nominees","index","NomineePage","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.029821bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/Button.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\n\r\nexport const Button = ({\r\n    children, \r\n    type, \r\n    onClick, \r\n    buttonStyle, \r\n    buttonSize}) => {\r\n        const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\r\n\r\n        const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n        return (\r\n            <Link to='/browse' className='btn-nomination'>\r\n                <button \r\n                className={`btn ${checkButtonStyle} ${checkButtonSize}`} \r\n                onClick={onClick}\r\n                type={type}\r\n                >\r\n                {children}\r\n                </button>\r\n            </Link>\r\n            \r\n        )\r\n    };\r\n","import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../css/Navbar.css';\r\nimport { Button } from  './Button';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const [button, setButton] = useState(true); \r\n\r\n    return (\r\n        \r\n        <div className=\"container\">\r\n                <div className=\"logo\">\r\n                    <Link to=\"./\" className=\"L\">The Shoppies</Link>\r\n                </div>\r\n                <div className=\"NavItems\">\r\n                     <Link to=\"/nominations\" className=\"nomList\">Nomination List</Link> \r\n                     {button &&  <Button buttonStyle='btn--outline'> Browse Movies</Button>}\r\n                </div>\r\n        </div>\r\n            \r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Cinema.1b2ec185.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport image from '../images/Cinema.jpg';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Section = styled.section\r\n`\r\n    background: url(${image}) top;\r\n    background-filter: blur(20px);\r\n    background-opacity: 0.5;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: flex-end;\r\n    margin-top: -60px;\r\n`;\r\nconst Container = styled.div\r\n`\r\n    color: #fff;\r\n    padding:5rem;\r\n    background-filter: blur(5px);\r\n    background-color: rgba(0,0,0,0.8);\r\n    margin:10rem;\r\n    border-radius: 10px;\r\n    \r\n\r\n    h1 {\r\n        font-size: clamp(2rem, 8vw, 5rem);\r\n        margin-bottom: 2rem;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-weight: 300;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    p {\r\n        font-size: clamp(1rem, 6vw, 2.5rem);\r\n        margin-bottom:1rem;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-weight: 50;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    button{\r\n        font-size: clamp(0.8rem, 4vw, 1.2rem);\r\n        margin-bottom: 0.8rem 2rem;\r\n        color: #fff;\r\n        background: rgb(250,99,99);\r\n        border:none;\r\n        border-radius:4px;\r\n        cursor:pointer;\r\n        outline: none;\r\n        margin-top: 0.2rem;\r\n        margin-left: 14rem;\r\n        margin-right: 12rem;\r\n    }\r\n`;\r\n\r\nfunction Landing() {\r\n\r\n    const history = useHistory();\r\n        return ( \r\n            <>\r\n            <Section>\r\n                <Container>\r\n                    <h1> The Shoppies</h1>\r\n                    <button onClick={() => history.push('/browse')}>Start Nominating</button>\r\n                </Container>\r\n             </Section>\r\n             </>\r\n        )\r\n    \r\n}\r\n\r\nexport default Landing\r\n","\r\n/*returns state data: describes how state is transfered to new state*/\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case \"REMOVE_MOVIE_FROM_NOMINATIONLIST\":\r\n            return {\r\n                ...state,\r\n                nominationList: state.nominationList.filter((o) => o.imdbID !== action.payload.imdbID),\r\n            };\r\n\r\n        case \"ADD_MOVIE_TO_NOMINATIONLIST\":\r\n           if( ! state.nominationList || state.nominationList.length === 0){\r\n                return {\r\n                    ...state,\r\n                    nominationList:[action.payload, ...state.nominationList],\r\n                    };\r\n            }\r\n            if(state.nominationList.find(o => o.imdbID === action.payload.imdbID)){\r\n                if(state.nominationList.length > 4) {\r\n                    alert(\"cant nominate \" + action.payload.Title + \"more than once!\");\r\n                    alert(\"your nomination list is full!\");\r\n                }else {\r\n                    alert(\"cant nominate \" + action.payload.Title + \"more than once!\")\r\n                }\r\n                return{\r\n                    ...state,\r\n                    nominationList: [...state.nominationList]\r\n                };\r\n            }else if(state.nominationList.length > 4){\r\n                alert(\"You can only nominate 5 movies!\");\r\n                return{\r\n                    ...state,\r\n                    nominationList: [...state.nominationList]\r\n                };\r\n            }else if (state.nominationList.length === 4){\r\n                alert(\"You reached the maximum number of nominees! Please view your selection in the NOMINATION LIST tab. \")\r\n                return {\r\n                    ...state,\r\n                    nominationList:[action.payload, ...state.nominationList],\r\n                    };\r\n            }else{\r\n                 return {\r\n                ...state,\r\n                nominationList:[action.payload, ...state.nominationList],\r\n                };\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    } //end of switch \r\n};","import React, { createContext, useReducer, useEffect} from 'react';\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n//initial state \r\nconst initialState = {\r\n    nominationList: window.localStorage.getItem('nominationList') ? JSON.parse(window.localStorage.getItem('nominationList')) : [],\r\n}\r\n\r\n//create context \r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Global Provider: access initial state for all components\r\nexport const GlobalProvider = props => {\r\n    const [state, dispatch] = useReducer( AppReducer, initialState);\r\n\r\n//will save nominees concurrently\r\n    useEffect (() => {\r\n       window.localStorage.setItem(\"nominationList\", JSON.stringify(state.nominationList));\r\n    }, [state])\r\n\r\n\r\n    //actions: when adding to nominate button\r\n    const addMovieToNominationList = movie =>{\r\n        dispatch({type: \"ADD_MOVIE_TO_NOMINATIONLIST\", payload: movie});\r\n    }\r\n\r\n    //to remove movies\r\n    const removeMovieFromNominationList = (movie) => {\r\n        dispatch({type: \"REMOVE_MOVIE_FROM_NOMINATIONLIST\", payload:movie});\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            nominationList: state.nominationList,\r\n            addMovieToNominationList,\r\n            removeMovieFromNominationList,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n\r\n\r\n}","import React, {useContext} from 'react';\r\nimport '../css/MovieList.css';\r\nimport {GlobalContext} from '../context/globalState';\r\n\r\nexport const MovieList = ({movies}) => { \r\n    const {\r\n        addMovieToNominationList,\r\n        nominationList\r\n    } = useContext (GlobalContext)\r\n\r\n    const addDefaultImage = (ev) => {\r\n        ev.target.src = 'https://assets.stickpng.com/images/58482ec0cef1014c0b5e4a70.png'\r\n    }\r\n\r\n    const checkExist = (aMovie) => {\r\n        let isDisabled = nominationList.find(o => o.imdbID === aMovie.imdbID);\r\n        const storedMovie = isDisabled ? true : false;\r\n        return storedMovie;\r\n    }\r\n\r\n    if (! movies || movies.length === 0){\r\n        return (\r\n            <div>\r\n                Loading\r\n            </div>\r\n        );  \r\n    }else{\r\n        return movies.map(aMovie =>{ \r\n            const checkMovie = checkExist (aMovie);\r\n            return(\r\n                <div className=\"image-container\" key={aMovie.imdbID}>\r\n                    <div className=\"card\">\r\n                        <div className=\"image\">\r\n                            <img src={aMovie.Poster}  onError={addDefaultImage} alt=\"poster\" style={{width: \"300px\", height:\"400px\"}}/>\r\n                            <h6 className=\"title\"> {aMovie.Title}, <i> {aMovie.Year} </i> </h6>\r\n                        </div>\r\n                        <div className=\"overlay\">\r\n                              <button \r\n                              className=\"btn-add\"\r\n                              disabled={checkMovie}\r\n                              onClick= {() => addMovieToNominationList(aMovie)}> Nominate</button>\r\n                        </div>   \r\n                \r\n                    </div>\r\n                  \r\n                </div>\r\n            )\r\n            \r\n        })\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/navbar.343a389d.png\";","import React, { useState, useEffect } from 'react';\r\nimport { MovieList } from './MovieList';\r\nimport '../css/Search.css';\r\nimport styled from 'styled-components';\r\nimport image from '../images/navbar.png';\r\n\r\nconst Section = styled.section\r\n`\r\n    background: url(${image}) top;\r\n    background-filter: blur(20px);\r\n    background-opacity: 0.5;\r\n    margin-top:30px;\r\n    height: 250px;\r\n    transform: translateY(40px);\r\n    overflow:auto;\r\n    justify-content: flex-start;\r\n    align-items: flex-end;\r\n    margin-top: -60px;\r\n`;\r\n\r\nconst Search = () => {\r\n    const [query, setQuery] = useState(\"\");\r\n    const [movies, setMovies] = useState([]);\r\n    /*calls for the API */\r\n  const getMovieRequest = async () => {\r\n    \r\n\r\n      const url = `https://www.omdbapi.com/?s=${query}&apikey=c2cd3803`\r\n      const response = await fetch(url);\r\n  \r\n      /*converts HTTP request into JSON format */\r\n      const responseJson = await response.json(); \r\n      setMovies(responseJson.Search);\r\n      console.log(movies);\r\n   \r\n    \r\n  }\r\n  /*loads when app is used for the first time */\r\n  useEffect(() => {\r\n    getMovieRequest(query);\r\n  }, [query]);\r\n\r\n    return (\r\n        <>\r\n        \r\n            <Section>\r\n                  <input \r\n                    type=\"Text\"\r\n                    placeholder=\"Search for a movie by title\"\r\n                     className=\"search-box\"\r\n                     value={query}\r\n                     onChange={(event) => setQuery(event.target.value)}\r\n                    />\r\n            </Section>\r\n            <div className=\"movie-container\">\r\n                <MovieList movies = {movies} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search;","import React, { useContext } from 'react';\r\nimport {GlobalContext} from '../context/globalState';\r\nimport '../css/Nominees.css';\r\n\r\n\r\nexport const Nominees = () => {\r\n    const { nominationList } = useContext (GlobalContext);\r\n    const {removeMovieFromNominationList} = useContext(GlobalContext);\r\n\r\n    const addDefaultImage = (ev) => {\r\n        ev.target.src = 'https://assets.stickpng.com/images/58482ec0cef1014c0b5e4a70.png'\r\n    }\r\n    \r\n    if (! nominationList || nominationList.length === 0){\r\n        return (\r\n            <>\r\n                <div className=\"null\">\r\n                    <h4 className=\"loading\"> No Nominees yet!</h4>\r\n                </div>\r\n            </>\r\n        );  \r\n    }else{\r\n        return nominationList.map((aMovie,index) =>{\r\n             \r\n            return(\r\n                <div className=\"image-container\" key={index}>\r\n                    <div className=\"card\">\r\n                        <div className=\"image\">\r\n                            <img src={aMovie.Poster} onError={addDefaultImage} alt=\"nominee-poster\" style={{width: \"300px\", height:\"400px\"}}/>\r\n                            <h6 className=\"title\"> {aMovie.Title}, <i> {aMovie.Year} </i> </h6>\r\n                        </div>\r\n                        <div className=\"overlay\">\r\n                              <button \r\n                              className=\"btn-remove\"\r\n                              onClick={() => {removeMovieFromNominationList(aMovie)}}\r\n                              > Remove</button>\r\n                        </div> \r\n                        <div className=\"done\">\r\n                        </div>  \r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n}\r\n","import React, { useContext } from 'react'\r\nimport image from '../images/navbar.png';\r\nimport styled from 'styled-components';\r\nimport '../css/NomineePage.css';\r\nimport { Nominees } from '../components/Nominees';\r\nimport {GlobalContext} from '../context/globalState';\r\n\r\nconst Section = styled.section\r\n`\r\n    background: url(${image}) top;\r\n    background-filter: blur(20px);\r\n    background-opacity: 0.5;\r\n    margin-top:30px;\r\n    height: 250px;\r\n    transform: translateY(40px);\r\n    overflow:auto;\r\n    justify-content: flex-start;\r\n    align-items: flex-end;\r\n    margin-top: -60px;\r\n`;\r\n\r\n\r\nexport const NomineePage = () => {\r\n    const {\r\n        removeMovieFromNominationList,\r\n        nominationList\r\n    } = useContext (GlobalContext)\r\n\r\n    const validate =() => {\r\n        if (nominationList.length === 0){\r\n            alert(\"You must nominate at least 1 movie!\")\r\n        }else {\r\n            nominationList.map((movie) => {\r\n                removeMovieFromNominationList(movie);\r\n            })\r\n            alert(\"Your nominees were saved!\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Section>\r\n                <div className=\"header\">\r\n                    <h4 className=\"page-name\"> Your Nominations</h4>\r\n                    <div className=\"submit-container\">\r\n                     <button className=\"submit-btn\" onClick={validate}> Submit </button>\r\n                </div> \r\n            </div>\r\n            </Section> \r\n            <div className=\"nominee-page-container\">\r\n                  <Nominees />\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport {Navbar} from './components/Navbar';\r\nimport Landing from './page/Landing';\r\nimport Search from './components/Search';\r\nimport {GlobalProvider} from './context/globalState';\r\nimport { NomineePage } from './page/NomineePage';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n    <Router>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Landing />\r\n        </Route>\r\n        <Route path=\"/nominations\">\r\n          <NomineePage />\r\n        </Route>\r\n        <Route path=\"/browse\">\r\n          <Search />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n\r\n  </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}