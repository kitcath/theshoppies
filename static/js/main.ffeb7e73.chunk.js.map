{"version":3,"sources":["components/Navbar.js","images/Cinema.jpg","components/Landing.js","context/AppReducer.js","context/globalState.js","components/MovieList.js","images/navbar.png","components/Search.js","components/Nominees.js","page/NomineePage.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Section","styled","section","image","Container","div","Landing","history","useHistory","onClick","push","state","action","type","nominationList","payload","initialState","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","useEffect","localStorage","setItem","JSON","stringify","Provider","value","addMovieToNominationList","movie","children","MovieList","movies","useContext","length","map","aMovie","src","Poster","alt","Title","Year","imdbID","Search","useState","query","setQuery","setMovies","getMovieRequest","a","url","fetch","response","json","responseJson","console","log","placeholder","onChange","event","target","Nominees","index","NomineePage","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffeb7e73.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        \r\n        <div className=\"container\">\r\n           \r\n                <div className=\"logo\">\r\n                    <Link to=\"/\" className=\"L\">The Shoppies</Link>\r\n                </div>\r\n                <div className=\"NavItems\">\r\n                     <Link to=\"/nominations\">Nomination List</Link> \r\n                     <Link to=\"/browse\" className=\"btn\">+nominate</Link>\r\n                </div>\r\n        </div>\r\n            \r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Cinema.1b2ec185.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport image from '../images/Cinema.jpg';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Section = styled.section\r\n`\r\n    background: url(${image}) top;\r\n    background-filter: blur(20px);\r\n    background-opacity: 0.5;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: flex-end;\r\n    margin-top: -60px;\r\n`;\r\nconst Container = styled.div\r\n`\r\n    color: #fff;\r\n    padding:5rem;\r\n    background-filter: blur(5px);\r\n    background-color: rgba(0,0,0,0.8);\r\n    margin:10rem;\r\n    border-radius: 10px;\r\n    \r\n\r\n    h1 {\r\n        font-size: clamp(2rem, 8vw, 5rem);\r\n        margin-bottom: 2rem;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-weight: 300;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    p {\r\n        font-size: clamp(1rem, 6vw, 2.5rem);\r\n        margin-bottom:1rem;\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-weight: 50;\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    button{\r\n        font-size: clamp(0.8rem, 4vw, 1.2rem);\r\n        margin-bottom: 0.8rem 2rem;\r\n        color: #fff;\r\n        background: rgb(250,99,99);\r\n        border:none;\r\n        border-radius:4px;\r\n        cursor:pointer;\r\n        outline: none;\r\n        margin-top: 0.2rem;\r\n        margin-left: 14rem;\r\n        margin-right: 12rem;\r\n    }\r\n`;\r\n\r\nfunction Landing() {\r\n\r\n    const history = useHistory();\r\n        return ( \r\n            <>\r\n            <Section>\r\n                <Container>\r\n                    <h1> The Shoppies</h1>\r\n                    <button onClick={() => history.push('/nominations')}>Start Nominating</button>\r\n                </Container>\r\n             </Section>\r\n             </>\r\n        )\r\n    \r\n}\r\n\r\nexport default Landing\r\n","\r\n/*returns state data: describes how state is transfered to new state*/\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case \"ADD_MOVIE_TO_NOMINATIONLIST\":\r\n            return {\r\n                ...state,\r\n                nominationList:[action.payload, ...state.nominationList],\r\n            }\r\n        default:\r\n            return state;\r\n    } //end of switch \r\n};","import React, { createContext, useReducer, useEffect} from 'react';\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n//initial state \r\nconst initialState = {\r\n    nominationList:  []\r\n};\r\n\r\n//create context \r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Global Provider: access initial state for all components\r\nexport const GlobalProvider = props => {\r\n    const [state, dispatch] = useReducer( AppReducer, initialState);\r\n\r\n    useEffect (() => {\r\n       localStorage.setItem('nominationList', JSON.stringify())\r\n    }, [state])\r\n    //actions: when adding to nominate button\r\n    const addMovieToNominationList = movie =>{\r\n        dispatch({type: \"ADD_MOVIE_TO_NOMINATIONLIST\", payload: movie});\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            nominationList: state.nominationList,\r\n            addMovieToNominationList,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n\r\n\r\n}","import React, {useContext} from 'react';\r\nimport './MovieList.css';\r\nimport {GlobalContext} from '../context/globalState';\r\n\r\nexport const MovieList = ({movies}) => {\r\n    \r\n    const {\r\n        addMovieToNominationList,\r\n        nominationList\r\n    } = useContext (GlobalContext)\r\n\r\n       \r\n    if (! movies || movies.length === 0){\r\n        return (\r\n            <div>\r\n                Loading\r\n            </div>\r\n        );  \r\n    }else{\r\n        return movies.map(aMovie =>{\r\n            \r\n            return(\r\n                <div className=\"image-container\" key={aMovie.imdbID}>\r\n                    <div className=\"card\">\r\n                        <div className=\"image\">\r\n                            <img src={aMovie.Poster} alt=\"poster\"/>\r\n                            <h6 className=\"title\"> {aMovie.Title}, <i> {aMovie.Year} </i> </h6>\r\n                        </div>\r\n                        <div className=\"overlay\">\r\n                              <button \r\n                              className=\"btn\"\r\n                              onClick= {() => addMovieToNominationList(aMovie)}> Nominate</button>\r\n                        </div>   \r\n                \r\n                    </div>\r\n                  \r\n                </div>\r\n            )\r\n            \r\n        })\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/navbar.343a389d.png\";","import React, { useState, useEffect } from 'react';\r\nimport { MovieList } from './MovieList';\r\nimport './Search.css';\r\nimport styled from 'styled-components';\r\nimport image from '../images/navbar.png';\r\n\r\nconst Section = styled.section\r\n`\r\n    background: url(${image}) top;\r\n    background-filter: blur(20px);\r\n    background-opacity: 0.5;\r\n    margin-top:30px;\r\n    height: 250px;\r\n    transform: translateY(40px);\r\n    overflow:auto;\r\n    justify-content: flex-start;\r\n    align-items: flex-end;\r\n    margin-top: -60px;\r\n`;\r\n\r\nconst Search = () => {\r\n    const [query, setQuery] = useState(\"\");\r\n    const [movies, setMovies] = useState([]);\r\n    /*calls for the API */\r\n  const getMovieRequest = async () => {\r\n    \r\n\r\n      const url = `http://www.omdbapi.com/?s=${query}&apikey=c2cd3803`\r\n      const response = await fetch(url);\r\n  \r\n      /*converts HTTP request into JSON format */\r\n      const responseJson = await response.json(); \r\n      setMovies(responseJson.Search);\r\n      console.log(movies);\r\n   \r\n    \r\n  }\r\n  /*loads when app is used for the first time */\r\n  useEffect(() => {\r\n    getMovieRequest(query);\r\n  }, [query]);\r\n\r\n\r\n    return (\r\n        <>\r\n        \r\n            <Section>\r\n                  <input \r\n                    type=\"Text\"\r\n                    placeholder=\"Search for a movie by title\"\r\n                     className=\"search-box\"\r\n                     value={query}\r\n                     onChange={(event) => setQuery(event.target.value)}\r\n                    />\r\n            </Section>\r\n            <div className=\"movie-container\">\r\n                <MovieList movies = {movies} />\r\n            </div>\r\n        </>\r\n     /*   <div className=\"browse-page\">\r\n            <div className=\"search-container\">\r\n                        <div className=\"bar\">\r\n                           \r\n                        </div>\r\n                </div>\r\n                 <div className=\"movie-results\">\r\n                     <MovieList movies={movies} />\r\n                </div>\r\n         \r\n        </div>*/\r\n    )\r\n}\r\n\r\nexport default Search;","import React, { useContext } from 'react';\r\nimport {GlobalContext} from '../context/globalState';\r\nimport './Nominees.css';\r\n\r\n\r\nexport const Nominees = () => {\r\n    const { nominationList } = useContext (GlobalContext);\r\n    \r\n    if (! nominationList || nominationList.length === 0){\r\n        return (\r\n            <>\r\n                <div className=\"null\">\r\n                    <h4 className=\"null\"> Loading...</h4>\r\n                </div>\r\n            </>\r\n        );  \r\n    }else{\r\n        return nominationList.map((aMovie,index) =>{\r\n             \r\n            return(\r\n                <div className=\"image-container\" key={index}>\r\n                    <div className=\"card\">\r\n                        <div className=\"image\">\r\n                            <img src={aMovie.Poster} alt=\"poster\"/>\r\n                            <h6 className=\"title\"> {aMovie.Title}, <i> {aMovie.Year} </i> </h6>\r\n                        </div>\r\n                        <div className=\"overlay\">\r\n                              <button \r\n                              className=\"btn\"\r\n                              > Remove</button>\r\n                        </div>   \r\n                    </div>\r\n                  \r\n                </div>\r\n            )\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport image from '../images/navbar.png';\r\nimport styled from 'styled-components';\r\nimport '../css/NomineePage.css';\r\nimport { Nominees } from '../components/Nominees';\r\n\r\nconst Section = styled.section\r\n`\r\n    background: url(${image}) top;\r\n    background-filter: blur(20px);\r\n    background-opacity: 0.5;\r\n    margin-top:30px;\r\n    height: 250px;\r\n    transform: translateY(40px);\r\n    overflow:auto;\r\n    justify-content: flex-start;\r\n    align-items: flex-end;\r\n    margin-top: -60px;\r\n`;\r\nexport const NomineePage = () => {\r\n    return (\r\n        <>\r\n            <Section>\r\n                <h4 className=\"page-name\"> Your Nominations</h4>\r\n            </Section> \r\n            <div className=\"nominee-page-container\">\r\n                  <Nominees />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {Navbar} from './components/Navbar';\nimport Landing from './components/Landing';\nimport Search from './components/Search';\n\nimport {GlobalProvider} from './context/globalState';\nimport { NomineePage } from './page/NomineePage';\nimport { Nominees } from './components/Nominees';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <Landing />\n        </Route>\n        <Route path=\"/nominations\">\n          <NomineePage />\n        </Route>\n\n        <Route path=\"/browse\">\n          <Search />\n        </Route>\n      </Switch>\n    </Router>\n\n  </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}